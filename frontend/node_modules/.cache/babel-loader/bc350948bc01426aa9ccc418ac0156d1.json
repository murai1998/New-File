{"ast":null,"code":"var _jsxFileName = \"/Users/thatchampion/Desktop/Ironhack/Project4/frontend/src/components/Socket.js\";\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport Navbar from \"./navbar\";\nimport moment from \"moment\";\nconst socket = io(\"http://localhost:4000\", {\n  transports: [\"websocket\", \"polling\"]\n});\n\nfunction Socket(props) {\n  const username = props.user.user.username;\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    async function username() {\n      socket.on(\"connect\", () => {\n        socket.emit(\"username\", username);\n        console.log(\"userName\", username);\n      });\n    }\n\n    async function users() {\n      socket.on(\"users\", users => {\n        setUsers(users);\n        console.log(\"All users\", users);\n      });\n    }\n\n    async function message() {\n      socket.on(\"message\", message => {\n        setMessages(messages => [...messages, message]);\n      });\n    }\n\n    async function connect() {\n      socket.on(\"connected\", user => {\n        setUsers(users => [...users, user]);\n      });\n    }\n\n    async function disconnect() {\n      socket.on(\"disconnected\", name => {\n        setUsers(users => {\n          return users.filter(user => user.name !== name);\n        });\n      });\n    }\n\n    username();\n    users();\n    message();\n    connect();\n    disconnect();\n  }, []);\n\n  const submit = event => {\n    event.preventDefault();\n    socket.emit(\"send\", message);\n    setMessage(\"\");\n  };\n\n  console.log(\"MESS\", messages);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 mt-4 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Hello \", username))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Messages\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, messages.map(({\n    user,\n    date,\n    text\n  }, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, moment(date).format(\"h:mm:ss a\")), user !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, user.name) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, text)))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submit,\n    id: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onChange: e => setMessage(e.currentTarget.value),\n    value: message,\n    id: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"submit\",\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, \"Send\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Users\"), console.log(users), /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, users.map(({\n    name,\n    id\n  }) => /*#__PURE__*/React.createElement(\"li\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, name))))))); //   const [state, setState] = useState({\n  //     message: \"\",\n  //     name: props.user.user.username\n  //   });\n  //   const [chat, setChat] = useState([]);\n  //   useEffect(() => {\n  //     socket.on(\"message\", ({ name, message }) => {\n  //       setChat([...chat, { name, message }]);\n  //     });\n  //   });\n  //   const onTextChange = e => {\n  //     setState({ ...state, [e.target.name]: e.target.value });\n  //   };\n  //   const onMessageSubmit = e => {\n  //     e.preventDefault();\n  //     const { name, message } = state;\n  //     socket.emit(\"message\", { name, message });\n  //     console.log(name, message);\n  //     setState({ message: \"\", name });\n  //   };\n  //   const renderChat = () => {\n  //     console.log(\"Name\", props.user.user.username);\n  //     return chat.map(({ name, message }, index) => (\n  //       <div key={index}>\n  //         <h3>\n  //           {name}: <span>{message}</span>\n  //         </h3>\n  //       </div>\n  //     ));\n  //   };\n  //   return (\n  //     <div>\n  //       <Navbar />\n  //       <div className=\"card\">\n  //         <form onSubmit={onMessageSubmit}>\n  //           <h1>Messanger</h1>\n  //           <div className=\"render-chat\">\n  //             <h1>Chat Log</h1>\n  //             {renderChat()}\n  //           </div>\n  //           <div>\n  //               <h2>Active users</h2>\n  //               <p></p>\n  //           </div>\n  //           <div>\n  //             <textarea\n  //               name=\"message\"\n  //               onChange={e => onTextChange(e)}\n  //               value={state.message}\n  //               variant=\"outlined\"\n  //               label=\"Message\"\n  //             />\n  //           </div>\n  //           <button>Send Message</button>\n  //         </form>\n  //       </div>\n  //     </div>\n  //   );\n}\n\nexport default Socket;","map":{"version":3,"sources":["/Users/thatchampion/Desktop/Ironhack/Project4/frontend/src/components/Socket.js"],"names":["React","useState","useEffect","io","Navbar","moment","socket","transports","Socket","props","username","user","users","setUsers","message","setMessage","messages","setMessages","on","emit","console","log","connect","disconnect","name","filter","submit","event","preventDefault","map","date","text","index","format","undefined","e","currentTarget","value","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport Navbar from \"./navbar\";\n\nimport moment from \"moment\";\n\nconst socket = io(\"http://localhost:4000\", {\n  transports: [\"websocket\", \"polling\"]\n});\nfunction Socket(props) {\n  const username = props.user.user.username;\n\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    async function username() {\n      socket.on(\"connect\", () => {\n        socket.emit(\"username\", username);\n        console.log(\"userName\", username);\n      });\n    }\n    async function users() {\n      socket.on(\"users\", users => {\n        setUsers(users);\n        console.log(\"All users\", users);\n      });\n    }\n    async function message() {\n      socket.on(\"message\", message => {\n        setMessages(messages => [...messages, message]);\n      });\n    }\n    async function connect() {\n      socket.on(\"connected\", user => {\n        setUsers(users => [...users, user]);\n      });\n    }\n    async function disconnect() {\n      socket.on(\"disconnected\", name => {\n        setUsers(users => {\n          return users.filter(user => user.name !== name);\n        });\n      });\n    }\n    username();\n    users();\n    message();\n    connect();\n    disconnect();\n  }, []);\n\n  const submit = event => {\n    event.preventDefault();\n    socket.emit(\"send\", message);\n    setMessage(\"\");\n  };\n  console.log(\"MESS\", messages);\n  return (\n    <div>\n      {\" \"}\n      <Navbar />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12 mt-4 mb-4\">\n            <h6>Hello {username}</h6>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-8\">\n            <h6>Messages</h6>\n\n            <div id=\"messages\">\n              {messages.map(({ user, date, text }, index) => (\n                <div key={index} className=\"row mb-2\">\n                  <div className=\"col-md-3\">\n                    {moment(date).format(\"h:mm:ss a\")}\n                  </div>\n                  {user !== undefined ? (\n                    <div className=\"col-md-2\">{user.name}</div>\n                  ) : (\n                    \"\"\n                  )}\n\n                  <div className=\"col-md-2\">{text}</div>\n                </div>\n              ))}\n            </div>\n            <form onSubmit={submit} id=\"form\">\n              <div className=\"input-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  onChange={e => setMessage(e.currentTarget.value)}\n                  value={message}\n                  id=\"text\"\n                />\n                <span className=\"input-group-btn\">\n                  <button id=\"submit\" type=\"submit\" className=\"btn btn-primary\">\n                    Send\n                  </button>\n                </span>\n              </div>\n            </form>\n          </div>\n          <div className=\"col-md-4\">\n            <h6>Users</h6>\n            {console.log(users)}\n            <ul id=\"users\">\n              {users.map(({ name, id }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  //   const [state, setState] = useState({\n  //     message: \"\",\n  //     name: props.user.user.username\n  //   });\n  //   const [chat, setChat] = useState([]);\n\n  //   useEffect(() => {\n  //     socket.on(\"message\", ({ name, message }) => {\n  //       setChat([...chat, { name, message }]);\n  //     });\n  //   });\n\n  //   const onTextChange = e => {\n  //     setState({ ...state, [e.target.name]: e.target.value });\n  //   };\n\n  //   const onMessageSubmit = e => {\n  //     e.preventDefault();\n  //     const { name, message } = state;\n  //     socket.emit(\"message\", { name, message });\n  //     console.log(name, message);\n  //     setState({ message: \"\", name });\n  //   };\n\n  //   const renderChat = () => {\n  //     console.log(\"Name\", props.user.user.username);\n  //     return chat.map(({ name, message }, index) => (\n  //       <div key={index}>\n  //         <h3>\n  //           {name}: <span>{message}</span>\n  //         </h3>\n  //       </div>\n  //     ));\n  //   };\n\n  //   return (\n  //     <div>\n  //       <Navbar />\n\n  //       <div className=\"card\">\n  //         <form onSubmit={onMessageSubmit}>\n  //           <h1>Messanger</h1>\n  //           <div className=\"render-chat\">\n  //             <h1>Chat Log</h1>\n  //             {renderChat()}\n  //           </div>\n\n  //           <div>\n  //               <h2>Active users</h2>\n  //               <p></p>\n  //           </div>\n  //           <div>\n  //             <textarea\n  //               name=\"message\"\n  //               onChange={e => onTextChange(e)}\n  //               value={state.message}\n  //               variant=\"outlined\"\n  //               label=\"Message\"\n  //             />\n  //           </div>\n  //           <button>Send Message</button>\n  //         </form>\n  //       </div>\n  //     </div>\n  //   );\n}\n\nexport default Socket;\n"]},"metadata":{},"sourceType":"module"}