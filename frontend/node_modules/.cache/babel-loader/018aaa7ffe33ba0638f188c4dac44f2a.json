{"ast":null,"code":"const request = require('request');\n\nlet customClassifier = function (text, category, API_KEY) {\n  return new Promise((resolve, reject) => {\n    if (!API_KEY) {\n      reject({\n        error: 'API key is not set'\n      });\n    } // if(!id){\n    // \treject({\n    // \t\terror: 'Please provide a valid ID. Get your custom classifier id by loggin to your [dashboard](https://user.apis.paralleldots.com/login) and publishing your categories.'\n    // \t})\n    // }\n\n\n    if (!text || typeof text != \"string\") {\n      reject({\n        error: 'Please provide a non-empty string'\n      });\n    }\n\n    if (typeof category != \"object\") {\n      reject({\n        error: 'Please provide categories object as the 2nd argument.'\n      });\n    }\n\n    category = JSON.stringify(category);\n    request.post({\n      url: 'http://apis.paralleldots.com/v4/custom_classifier',\n      form: {\n        text: text,\n        category: category,\n        api_key: API_KEY\n      }\n    }, function (err, httpResponse, body) {\n      if (err) {\n        reject({\n          \"Error\": err\n        });\n      }\n\n      resolve(body);\n    });\n  });\n};\n\nmodule.exports = customClassifier;","map":{"version":3,"sources":["/Users/thatchampion/Desktop/Ironhack/Project4/node_modules/paralleldots/apis/customClassifier.js"],"names":["request","require","customClassifier","text","category","API_KEY","Promise","resolve","reject","error","JSON","stringify","post","url","form","api_key","err","httpResponse","body","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAIC,gBAAgB,GAAG,UAASC,IAAT,EAAcC,QAAd,EAAuBC,OAAvB,EAA+B;AACrD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAoB;AACtC,QAAG,CAACH,OAAJ,EAAY;AACXG,MAAAA,MAAM,CAAC;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAD,CAAN;AACA,KAHqC,CAItC;AACA;AACA;AACA;AACA;;;AACA,QAAG,CAACN,IAAD,IAAS,OAAOA,IAAP,IAAgB,QAA5B,EAAqC;AACpCK,MAAAA,MAAM,CAAC;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAD,CAAN;AACA;;AACD,QAAG,OAAOL,QAAP,IAAoB,QAAvB,EAAgC;AAC/BI,MAAAA,MAAM,CAAC;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAD,CAAN;AACA;;AACDL,IAAAA,QAAQ,GAAGM,IAAI,CAACC,SAAL,CAAeP,QAAf,CAAX;AACAJ,IAAAA,OAAO,CAACY,IAAR,CAAa;AAACC,MAAAA,GAAG,EAAC,mDAAL;AAA0DC,MAAAA,IAAI,EAAE;AAACX,QAAAA,IAAI,EAACA,IAAN;AAAWC,QAAAA,QAAQ,EAACA,QAApB;AAA6BW,QAAAA,OAAO,EAACV;AAArC;AAAhE,KAAb,EAA6H,UAASW,GAAT,EAAaC,YAAb,EAA0BC,IAA1B,EAA+B;AAC3J,UAAGF,GAAH,EAAO;AACNR,QAAAA,MAAM,CAAC;AAAC,mBAAQQ;AAAT,SAAD,CAAN;AACA;;AACDT,MAAAA,OAAO,CAACW,IAAD,CAAP;AACC,KALF;AAMA,GAtBM,CAAP;AAuBA,CAxBD;;AA0BAC,MAAM,CAACC,OAAP,GAAiBlB,gBAAjB","sourcesContent":["const request = require('request');\n\nlet customClassifier = function(text,category,API_KEY){\n\treturn new Promise((resolve,reject) => {\n\t\tif(!API_KEY){\n\t\t\treject({error: 'API key is not set'});\n\t\t}\n\t\t// if(!id){\n\t\t// \treject({\n\t\t// \t\terror: 'Please provide a valid ID. Get your custom classifier id by loggin to your [dashboard](https://user.apis.paralleldots.com/login) and publishing your categories.'\n\t\t// \t})\n\t\t// }\n\t\tif(!text || typeof(text) != \"string\"){\n\t\t\treject({error: 'Please provide a non-empty string'});\n\t\t}\n\t\tif(typeof(category) != \"object\"){\n\t\t\treject({error: 'Please provide categories object as the 2nd argument.'})\n\t\t}\n\t\tcategory = JSON.stringify(category);\n\t\trequest.post({url:'http://apis.paralleldots.com/v4/custom_classifier', form: {text:text,category:category,api_key:API_KEY}}, function(err,httpResponse,body){ \n\t\t\tif(err){\n\t\t\t\treject({\"Error\":err})\n\t\t\t}\n\t\t\tresolve(body);\n\t\t })\n\t})\n}\n\nmodule.exports = customClassifier;\n"]},"metadata":{},"sourceType":"script"}