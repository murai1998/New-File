{"ast":null,"code":"var _jsxFileName = \"/Users/thatchampion/Desktop/Ironhack/Project4/frontend/src/components/Socket.js\";\nimport React, { useState, useEffect } from \"react\"; // import io from \"socket.io-client\";\n\nimport socketIOClient from \"socket.io-client\";\nimport Navbar from \"./navbar\";\nimport moment from \"moment\"; // import userGen from \"username-generator\";\n\nimport { Button, Input } from \"reactstrap\"; // const socket = io(\"http://localhost:4000\", {\n//   transports: [\"websocket\", \"polling\"]\n// });\n\nconst ENDPOINT = \"http://127.0.0.1:4000\";\nconst socket = socketIOClient(ENDPOINT);\n\nfunction Socket(props) {\n  var _user$usersList, _user$usersList2, _recMsg$listMsg;\n\n  //   const [state, setState] = useState({\n  //     message: \"\",\n  //     name: props.user.user.username,\n  //     users: []\n  //   });\n  //   const [chat, setChat] = useState([]);\n  //   useEffect(() => {\n  //     socket.on(\"message\", ({ name, message }) => {\n  //       setChat([...chat, { name, message }]);\n  //     });\n  //   });\n  //   const onTextChange = e => {\n  //     setState({ ...state, [e.target.name]: e.target.value });\n  //   };\n  //   const onMessageSubmit = e => {\n  //     e.preventDefault();\n  //     const { name, message, users } = state;\n  //     socket.emit(\"message\", { name, message });\n  //     users.push(name);\n  //     console.log(\"users\", name);\n  //     setState({ message: \"\", name });\n  //   };\n  //   const renderChat = () => {\n  //     console.log(\"Name\", props.user.user.username);\n  //     return chat.map(({ name, message }, index) => (\n  //       <div key={index}>\n  //         <h3>\n  //           {name}: <span>{message}</span>\n  //         </h3>\n  //       </div>\n  //     ));\n  //   };\n  //   return (\n  //     <div>\n  //       <Navbar />\n  //       {props.user.user.username}\n  //       <div className=\"card\">\n  //         <form onSubmit={onMessageSubmit}>\n  //           <h1>Messanger</h1>\n  //           <div className=\"render-chat\">\n  //             <h1>Chat Log</h1>\n  //             {renderChat()}\n  //           </div>\n  //           <div>\n  //             <h2>Active users</h2>\n  //             <p></p>\n  //           </div>\n  //           <div>\n  //             <textarea\n  //               name=\"message\"\n  //               onChange={e => onTextChange(e)}\n  //               value={state.message}\n  //               variant=\"outlined\"\n  //               label=\"Message\"\n  //             />\n  //           </div>\n  //           <button>Send Message</button>\n  //         </form>\n  //       </div>\n  //     </div>\n  //   );\n  const [user, setUser] = useState({\n    usersList: null\n  });\n  const [msg, setMsg] = useState(\"\");\n  const [recMsg, setRecMsg] = useState({\n    listMsg: []\n  });\n  const [loggedUser, setLoggedUser] = useState();\n  useEffect(() => {\n    // subscribe a new user\n    socket.emit(\"login\", props.user.user.username); // list of connected users\n\n    socket.on(\"users\", data => {\n      setUser({\n        usersList: JSON.parse(data)\n      });\n    }); // get the logged user\n\n    socket.on(\"connecteduser\", data => {\n      setLoggedUser(JSON.parse(data));\n    }); // we get the messages\n\n    socket.on(\"getMsg\", data => {\n      let listMessages = recMsg.listMsg;\n      listMessages.push(JSON.parse(data));\n      setRecMsg({\n        listMsg: listMessages\n      });\n    });\n  }, []); // to send a message\n\n  const sendMessage = () => {\n    socket.emit(\"sendMsg\", JSON.stringify({\n      id: loggedUser.id,\n      msg: msg\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \" \", \"Connected users : \", (_user$usersList = user.usersList) === null || _user$usersList === void 0 ? void 0 : _user$usersList.length, \" \"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \" User name \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \" Connection Date \"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, (_user$usersList2 = user.usersList) === null || _user$usersList2 === void 0 ? void 0 : _user$usersList2.map(user => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: user.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, \" \", user.userName, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, \" \", user.connectionTime, \" \"));\n  }))), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, \" \", \"User : \", loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.userName, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderStyle: \"inset\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, \" Chat \"), (_recMsg$listMsg = recMsg.listMsg) === null || _recMsg$listMsg === void 0 ? void 0 : _recMsg$listMsg.map((msgInfo, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, msgInfo.userName, \" \"), \" : \", msgInfo.msg, \" \", /*#__PURE__*/React.createElement(\"small\", {\n      style: {\n        marginLeft: \"18px\",\n        color: \"blue\",\n        marginTop: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, \" \", msgInfo.time, \" \"), \" \");\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: \"300px\",\n      display: \"inline\"\n    },\n    id: \"inputmsg\",\n    onChange: event => setMsg(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-info\",\n    id: \"btnmsg\",\n    onClick: () => {\n      sendMessage();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, \" \", \"Send\", \" \")));\n}\n\nexport default Socket;","map":{"version":3,"sources":["/Users/thatchampion/Desktop/Ironhack/Project4/frontend/src/components/Socket.js"],"names":["React","useState","useEffect","socketIOClient","Navbar","moment","Button","Input","ENDPOINT","socket","Socket","props","user","setUser","usersList","msg","setMsg","recMsg","setRecMsg","listMsg","loggedUser","setLoggedUser","emit","username","on","data","JSON","parse","listMessages","push","sendMessage","stringify","id","length","map","userName","connectionTime","borderStyle","msgInfo","index","marginLeft","color","marginTop","time","width","display","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import io from \"socket.io-client\";\nimport socketIOClient from \"socket.io-client\";\nimport Navbar from \"./navbar\";\n\nimport moment from \"moment\";\n// import userGen from \"username-generator\";\nimport { Button, Input } from \"reactstrap\";\n// const socket = io(\"http://localhost:4000\", {\n//   transports: [\"websocket\", \"polling\"]\n// });\nconst ENDPOINT = \"http://127.0.0.1:4000\";\nconst socket = socketIOClient(ENDPOINT);\nfunction Socket(props) {\n  //   const [state, setState] = useState({\n  //     message: \"\",\n  //     name: props.user.user.username,\n  //     users: []\n  //   });\n  //   const [chat, setChat] = useState([]);\n\n  //   useEffect(() => {\n  //     socket.on(\"message\", ({ name, message }) => {\n  //       setChat([...chat, { name, message }]);\n  //     });\n  //   });\n\n  //   const onTextChange = e => {\n  //     setState({ ...state, [e.target.name]: e.target.value });\n  //   };\n\n  //   const onMessageSubmit = e => {\n  //     e.preventDefault();\n  //     const { name, message, users } = state;\n  //     socket.emit(\"message\", { name, message });\n  //     users.push(name);\n  //     console.log(\"users\", name);\n  //     setState({ message: \"\", name });\n  //   };\n\n  //   const renderChat = () => {\n  //     console.log(\"Name\", props.user.user.username);\n  //     return chat.map(({ name, message }, index) => (\n  //       <div key={index}>\n  //         <h3>\n  //           {name}: <span>{message}</span>\n  //         </h3>\n  //       </div>\n  //     ));\n  //   };\n\n  //   return (\n  //     <div>\n  //       <Navbar />\n  //       {props.user.user.username}\n  //       <div className=\"card\">\n  //         <form onSubmit={onMessageSubmit}>\n  //           <h1>Messanger</h1>\n  //           <div className=\"render-chat\">\n  //             <h1>Chat Log</h1>\n  //             {renderChat()}\n  //           </div>\n\n  //           <div>\n  //             <h2>Active users</h2>\n  //             <p></p>\n  //           </div>\n  //           <div>\n  //             <textarea\n  //               name=\"message\"\n  //               onChange={e => onTextChange(e)}\n  //               value={state.message}\n  //               variant=\"outlined\"\n  //               label=\"Message\"\n  //             />\n  //           </div>\n  //           <button>Send Message</button>\n  //         </form>\n  //       </div>\n  //     </div>\n  //   );\n\n  const [user, setUser] = useState({\n    usersList: null\n  });\n  const [msg, setMsg] = useState(\"\");\n  const [recMsg, setRecMsg] = useState({\n    listMsg: []\n  });\n  const [loggedUser, setLoggedUser] = useState();\n\n  useEffect(() => {\n    // subscribe a new user\n    socket.emit(\"login\", props.user.user.username);\n    // list of connected users\n    socket.on(\"users\", data => {\n      setUser({ usersList: JSON.parse(data) });\n    });\n    // get the logged user\n    socket.on(\"connecteduser\", data => {\n      setLoggedUser(JSON.parse(data));\n    });\n\n    // we get the messages\n    socket.on(\"getMsg\", data => {\n      let listMessages = recMsg.listMsg;\n      listMessages.push(JSON.parse(data));\n      setRecMsg({ listMsg: listMessages });\n    });\n  }, []);\n\n  // to send a message\n  const sendMessage = () => {\n    socket.emit(\"sendMsg\", JSON.stringify({ id: loggedUser.id, msg: msg }));\n  };\n  return (\n    <div>\n      <Navbar />\n      <h3 className=\"d-flex justify-content-center\">\n        {\" \"}\n        Connected users : {user.usersList?.length}{\" \"}\n      </h3>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th> User name </th>\n            <th> Connection Date </th>\n          </tr>\n        </thead>\n        <tbody>\n          {user.usersList?.map(user => {\n            return (\n              <tr key={user.id}>\n                <td> {user.userName} </td>\n                <td> {user.connectionTime} </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <h3 className=\"d-flex justify-content-center\">\n        {\" \"}\n        User : {loggedUser?.userName}{\" \"}\n      </h3>\n      <div style={{ borderStyle: \"inset\" }}>\n        <h2 className=\"d-flex justify-content-center\"> Chat </h2>\n        {recMsg.listMsg?.map((msgInfo, index) => {\n          return (\n            <div className=\"d-flex justify-content-center\" key={index}>\n              {\" \"}\n              <b>{msgInfo.userName} </b> : {msgInfo.msg}{\" \"}\n              <small\n                style={{ marginLeft: \"18px\", color: \"blue\", marginTop: \"5px\" }}\n              >\n                {\" \"}\n                {msgInfo.time}{\" \"}\n              </small>{\" \"}\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"d-flex justify-content-center\">\n        <Input\n          style={{ width: \"300px\", display: \"inline\" }}\n          id=\"inputmsg\"\n          onChange={event => setMsg(event.target.value)}\n        />\n        <Button\n          className=\"btn btn-info\"\n          id=\"btnmsg\"\n          onClick={() => {\n            sendMessage();\n          }}\n        >\n          {\" \"}\n          Send{\" \"}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Socket;\n"]},"metadata":{},"sourceType":"module"}