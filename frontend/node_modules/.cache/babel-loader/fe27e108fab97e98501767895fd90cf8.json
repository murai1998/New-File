{"ast":null,"code":"var _jsxFileName = \"/Users/thatchampion/Desktop/Ironhack/Project4/frontend/src/components/Socket.js\";\nimport React, { useState, useEffect } from \"react\"; // import io from \"socket.io-client\";\n\nimport socketIOClient from \"socket.io-client\";\nimport Navbar from \"./navbar\";\nimport moment from \"moment\"; // import userGen from \"username-generator\";\n\nimport { Button, Input } from \"reactstrap\"; // const socket = io(\"http://localhost:4000\", {\n//   transports: [\"websocket\", \"polling\"]\n// });\n\nconst ENDPOINT = \"http://127.0.0.1:4000\";\nconst socket = socketIOClient(ENDPOINT);\n\nfunction Socket(props) {\n  var _user$usersList, _user$usersList2, _recMsg$listMsg;\n\n  const [user, setUser] = useState({\n    usersList: null\n  });\n  const [msg, setMsg] = useState(\"\");\n  const [recMsg, setRecMsg] = useState({\n    listMsg: []\n  });\n  const [loggedUser, setLoggedUser] = useState();\n  useEffect(() => {\n    // subscribe a new user\n    socket.emit(\"login\", props.user.user.username); // list of connected users\n\n    socket.on(\"users\", data => {\n      setUser({\n        usersList: JSON.parse(data)\n      });\n    }); // get the logged user\n\n    socket.on(\"connecteduser\", data => {\n      setLoggedUser(JSON.parse(data));\n    }); // we get the messages\n\n    socket.on(\"getMsg\", data => {\n      let listMessages = recMsg.listMsg;\n      listMessages.push(JSON.parse(data));\n      setRecMsg({\n        listMsg: listMessages\n      });\n    });\n  }, []);\n\n  const disconect = name => {\n    // e.preventDefault();\n    socket.emit(\"disconect\", name);\n    socket.disconnect();\n  }; // to send a message\n\n\n  const sendMessage = () => {\n    socket.emit(\"sendMsg\", JSON.stringify({\n      id: loggedUser.id,\n      msg: msg\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    disconect: disconect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tableNames\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"d-flex justify-content-center table-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \" \", \"Active users: \", (_user$usersList = user.usersList) === null || _user$usersList === void 0 ? void 0 : _user$usersList.length, \" \"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \" User name \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \" Connection Date \"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, (_user$usersList2 = user.usersList) === null || _user$usersList2 === void 0 ? void 0 : _user$usersList2.map(user => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: user.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, \" \", user.userName, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }, \" \", user.connectionTime, \" \"));\n  })))), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \" \", \"Hi, \", loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.userName, \"! Start a new conversation\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \" Chat \"), (_recMsg$listMsg = recMsg.listMsg) === null || _recMsg$listMsg === void 0 ? void 0 : _recMsg$listMsg.map((msgInfo, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, msgInfo.userName, \" \"), \" : \", msgInfo.msg, \" \", /*#__PURE__*/React.createElement(\"small\", {\n      style: {\n        marginLeft: \"18px\",\n        color: \"blue\",\n        marginTop: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, \" \", msgInfo.time, \" \"), \" \");\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: \"300px\",\n      display: \"inline\"\n    },\n    id: \"inputmsg\",\n    onChange: event => setMsg(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-info\",\n    id: \"btnmsg\",\n    onClick: () => {\n      sendMessage();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \" \", \"Send\", \" \")));\n}\n\nexport default Socket;","map":{"version":3,"sources":["/Users/thatchampion/Desktop/Ironhack/Project4/frontend/src/components/Socket.js"],"names":["React","useState","useEffect","socketIOClient","Navbar","moment","Button","Input","ENDPOINT","socket","Socket","props","user","setUser","usersList","msg","setMsg","recMsg","setRecMsg","listMsg","loggedUser","setLoggedUser","emit","username","on","data","JSON","parse","listMessages","push","disconect","name","disconnect","sendMessage","stringify","id","length","map","userName","connectionTime","msgInfo","index","marginLeft","color","marginTop","time","width","display","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAOC,MAAP,MAAmB,QAAnB,C,CACA;;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,YAA9B,C,CACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG,uBAAjB;AACA,MAAMC,MAAM,GAAGN,cAAc,CAACK,QAAD,CAA7B;;AACA,SAASE,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC;AAC/Ba,IAAAA,SAAS,EAAE;AADoB,GAAD,CAAhC;AAGA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC;AACnCkB,IAAAA,OAAO,EAAE;AAD0B,GAAD,CAApC;AAGA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,EAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AAEAO,IAAAA,MAAM,CAACa,IAAP,CAAY,OAAZ,EAAqBX,KAAK,CAACC,IAAN,CAAWA,IAAX,CAAgBW,QAArC,EAHc,CAId;;AACAd,IAAAA,MAAM,CAACe,EAAP,CAAU,OAAV,EAAmBC,IAAI,IAAI;AACzBZ,MAAAA,OAAO,CAAC;AAAEC,QAAAA,SAAS,EAAEY,IAAI,CAACC,KAAL,CAAWF,IAAX;AAAb,OAAD,CAAP;AACD,KAFD,EALc,CAQd;;AACAhB,IAAAA,MAAM,CAACe,EAAP,CAAU,eAAV,EAA2BC,IAAI,IAAI;AACjCJ,MAAAA,aAAa,CAACK,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAD,CAAb;AACD,KAFD,EATc,CAad;;AACAhB,IAAAA,MAAM,CAACe,EAAP,CAAU,QAAV,EAAoBC,IAAI,IAAI;AAC1B,UAAIG,YAAY,GAAGX,MAAM,CAACE,OAA1B;AACAS,MAAAA,YAAY,CAACC,IAAb,CAAkBH,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAlB;AACAP,MAAAA,SAAS,CAAC;AAAEC,QAAAA,OAAO,EAAES;AAAX,OAAD,CAAT;AACD,KAJD;AAKD,GAnBQ,EAmBN,EAnBM,CAAT;;AAoBA,QAAME,SAAS,GAAGC,IAAI,IAAI;AACxB;AAEAtB,IAAAA,MAAM,CAACa,IAAP,CAAY,WAAZ,EAAyBS,IAAzB;AAEAtB,IAAAA,MAAM,CAACuB,UAAP;AACD,GAND,CA9BqB,CAqCrB;;;AACA,QAAMC,WAAW,GAAG,MAAM;AACxBxB,IAAAA,MAAM,CAACa,IAAP,CAAY,SAAZ,EAAuBI,IAAI,CAACQ,SAAL,CAAe;AAAEC,MAAAA,EAAE,EAAEf,UAAU,CAACe,EAAjB;AAAqBpB,MAAAA,GAAG,EAAEA;AAA1B,KAAf,CAAvB;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEe,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,6CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,uCAEiBlB,IAAI,CAACE,SAFtB,oDAEiB,gBAAgBsB,MAFjC,EAEyC,GAFzC,CADF,eAKE;AAAO,IAAA,SAAS,EAAC,mDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CADF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACGxB,IAAI,CAACE,SADR,qDACG,iBAAgBuB,GAAhB,CAAoBzB,IAAI,IAAI;AAC3B,wBACE;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACuB,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMvB,IAAI,CAAC0B,QAAX,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAM1B,IAAI,CAAC2B,cAAX,MAFF,CADF;AAMD,GAPA,CADH,CAPF,CALF,CAFF,eA0BE;AAAI,IAAA,SAAS,EAAC,+BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,UAEOnB,UAFP,aAEOA,UAFP,uBAEOA,UAAU,CAAEkB,QAFnB,+BA1BF,eA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,+BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,qBAEGrB,MAAM,CAACE,OAFV,oDAEG,gBAAgBkB,GAAhB,CAAoB,CAACG,OAAD,EAAUC,KAAV,KAAoB;AACvC,wBACE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAA+C,MAAA,GAAG,EAAEA,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,OAAO,CAACF,QAAZ,MAFF,SAEgCE,OAAO,CAACzB,GAFxC,EAE6C,GAF7C,eAGE;AACE,MAAA,KAAK,EAAE;AAAE2B,QAAAA,UAAU,EAAE,MAAd;AAAsBC,QAAAA,KAAK,EAAE,MAA7B;AAAqCC,QAAAA,SAAS,EAAE;AAAhD,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,GAHH,EAIGJ,OAAO,CAACK,IAJX,EAIiB,GAJjB,CAHF,EAQW,GARX,CADF;AAYD,GAbA,CAFH,CA9BF,eA+CE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KADT;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,QAAQ,EAAEC,KAAK,IAAIhC,MAAM,CAACgC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,EAAE,EAAC,QAFL;AAGE,IAAA,OAAO,EAAE,MAAM;AACbjB,MAAAA,WAAW;AACZ,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOG,GAPH,UAQO,GARP,CANF,CA/CF,CADF;AAmED;;AAED,eAAevB,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import io from \"socket.io-client\";\nimport socketIOClient from \"socket.io-client\";\nimport Navbar from \"./navbar\";\n\nimport moment from \"moment\";\n// import userGen from \"username-generator\";\nimport { Button, Input } from \"reactstrap\";\n// const socket = io(\"http://localhost:4000\", {\n//   transports: [\"websocket\", \"polling\"]\n// });\nconst ENDPOINT = \"http://127.0.0.1:4000\";\nconst socket = socketIOClient(ENDPOINT);\nfunction Socket(props) {\n  const [user, setUser] = useState({\n    usersList: null\n  });\n  const [msg, setMsg] = useState(\"\");\n  const [recMsg, setRecMsg] = useState({\n    listMsg: []\n  });\n  const [loggedUser, setLoggedUser] = useState();\n\n  useEffect(() => {\n    // subscribe a new user\n\n    socket.emit(\"login\", props.user.user.username);\n    // list of connected users\n    socket.on(\"users\", data => {\n      setUser({ usersList: JSON.parse(data) });\n    });\n    // get the logged user\n    socket.on(\"connecteduser\", data => {\n      setLoggedUser(JSON.parse(data));\n    });\n\n    // we get the messages\n    socket.on(\"getMsg\", data => {\n      let listMessages = recMsg.listMsg;\n      listMessages.push(JSON.parse(data));\n      setRecMsg({ listMsg: listMessages });\n    });\n  }, []);\n  const disconect = name => {\n    // e.preventDefault();\n\n    socket.emit(\"disconect\", name);\n\n    socket.disconnect();\n  };\n  // to send a message\n  const sendMessage = () => {\n    socket.emit(\"sendMsg\", JSON.stringify({ id: loggedUser.id, msg: msg }));\n  };\n\n  return (\n    <div>\n      <Navbar disconect={disconect} />\n      <div className=\"tableNames\">\n        <h3 className=\"d-flex justify-content-center table-primary\">\n          {\" \"}\n          Active users: {user.usersList?.length}{\" \"}\n        </h3>\n        <table className=\"table table-striped d-flex justify-content-center\">\n          <thead>\n            <tr>\n              <th> User name </th>\n              <th> Connection Date </th>\n            </tr>\n          </thead>\n          <tbody>\n            {user.usersList?.map(user => {\n              return (\n                <tr key={user.id}>\n                  <td> {user.userName} </td>\n                  <td> {user.connectionTime} </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      <h3 className=\"d-flex justify-content-center\">\n        {\" \"}\n        Hi, {loggedUser?.userName}! Start a new conversation\n      </h3>\n      <div>\n        <h3 className=\"d-flex justify-content-center\"> Chat </h3>\n        {recMsg.listMsg?.map((msgInfo, index) => {\n          return (\n            <div className=\"d-flex justify-content-center\" key={index}>\n              {\" \"}\n              <b>{msgInfo.userName} </b> : {msgInfo.msg}{\" \"}\n              <small\n                style={{ marginLeft: \"18px\", color: \"blue\", marginTop: \"5px\" }}\n              >\n                {\" \"}\n                {msgInfo.time}{\" \"}\n              </small>{\" \"}\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"d-flex justify-content-center\">\n        <Input\n          style={{ width: \"300px\", display: \"inline\" }}\n          id=\"inputmsg\"\n          onChange={event => setMsg(event.target.value)}\n        />\n        <Button\n          className=\"btn btn-info\"\n          id=\"btnmsg\"\n          onClick={() => {\n            sendMessage();\n          }}\n        >\n          {\" \"}\n          Send{\" \"}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Socket;\n"]},"metadata":{},"sourceType":"module"}